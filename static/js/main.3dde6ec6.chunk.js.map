{"version":3,"sources":["components/Test/Test.module.css","common/InputText/InputText.module.css","common/Checkbox/Checkbox.module.css","components/Header/Header.module.css","common/Button/Button.module.css","components/Profile/Profile.module.css","components/Login/Login.module.css","components/Layout/Layout.module.css","components/NewPassword/NewPassword.module.css","components/Page404/Page404.module.css","components/RecoveryPassword/RecoveryPassword.module.css","components/UserRegistration/UserRegistration.module.css","components/Profile/Profile.tsx","components/Login/Login.tsx","components/Header/Header.tsx","components/Layout/Layout.tsx","components/NewPassword/NewPassword.tsx","components/Page404/Page404.tsx","components/RecoveryPassword/RecoveryPassword.tsx","common/InputText/InputText.tsx","common/Checkbox/Checkbox.tsx","common/Button/Button.tsx","components/Test/Test.tsx","components/UserRegistration/UserRegistration.tsx","App/App.tsx","reportWebVitals.ts","components/Login/loginReducer.ts","components/NewPassword/newPasswordReducer.ts","components/Profile/profileReducer.ts","components/RecoveryPassword/recoveryPasswordReducer.ts","components/UserRegistration/userRegistrationReducer.ts","App/store.ts","index.tsx"],"names":["module","exports","Profile","pageData","useSelector","state","profileReducer","className","styles","profile","pageTitle","Login","loginReducer","login","Header","header","wrapper","to","Layout","main","NewPassword","newPasswordReducer","newPassword","Page404","page404","RecoveryPassword","recoveryPasswordReducer","recoveryPassword","InputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","input","e","currentTarget","value","key","Checkbox","onChangeChecked","children","s","checkbox","label","checked","Button","red","finalClassName","default","Test","test","myInput","myCheckbox","myButton","UserRegistration","userRegistrationReducer","App","path","element","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","InitialState","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dde6ec6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"Test_test__J0IQa\",\"myInput\":\"Test_myInput__2nsGh\",\"myCheckbox\":\"Test_myCheckbox__1ky7d\",\"myButton\":\"Test_myButton__rLuLK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputText_input__MMUFi\",\"errorInput\":\"InputText_errorInput__2dgpt\",\"error\":\"InputText_error__3NWwn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__2_X3h\",\"spanClassName\":\"Checkbox_spanClassName__3H0HK\",\"label\":\"Checkbox_label__2XqIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"wrapper\":\"Header_wrapper__4Axjt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__1mzUy\",\"red\":\"Button_red__3_s5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2Px22\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1dFZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassword\":\"NewPassword_newPassword__16_E4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page404\":\"Page404_page404__2jsyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recoveryPassword\":\"RecoveryPassword_recoveryPassword__1M2tU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userRegistration\":\"UserRegistration_userRegistration__2CvV_\"};","import React from 'react'\nimport styles from './Profile.module.css'\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../App/store\";\nimport {InitialStateProfileType} from \"./profileReducer\";\n\nexport const Profile: React.FC<PropsType> = () => {\n  const pageData = useSelector<AppRootStateType, InitialStateProfileType>(state => state.profileReducer)\n\n  return (\n    <div className={styles.profile}>\n      <h1>{pageData.pageTitle}</h1>\n    </div>\n  )\n}\n\ntype PropsType = {}\n","import React from 'react'\nimport styles from './Login.module.css'\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../App/store\";\nimport {InitialStateLoginType} from \"./loginReducer\";\n\nexport const Login:React.FC<PropsType> = () => {\n  const pageData = useSelector<AppRootStateType, InitialStateLoginType>(state => state.loginReducer)\n\n  return (\n    <div className={styles.login}>\n      <h1>{pageData.pageTitle}</h1>\n    </div>\n  )\n}\n\ntype PropsType = {}\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport styles from './Header.module.css'\n\ntype PropsType = {}\n\nexport const Header: React.FC<PropsType> = () => {\n  return (\n    <>\n      <header className={styles.header}>\n        <div className={styles.wrapper}>\n          <NavLink to={'/'}>Test</NavLink>\n          <NavLink to={'/profile'}>Profile</NavLink>\n          <NavLink to={'/login'}>Login</NavLink>\n          <NavLink to={'/new-password'}>New Password</NavLink>\n          <NavLink to={'/recovery-password'}>Recovery password</NavLink>\n          <NavLink to={'/user-registration'}>User registration</NavLink>\n        </div>\n      </header>\n    </>\n  )\n}","import React from 'react'\nimport {Outlet} from 'react-router-dom'\nimport {Header} from \"../Header/Header\";\nimport styles from './Layout.module.css'\n\ntype PropsType = {}\n\nexport const Layout: React.FC<PropsType> = () => {\n  return (\n    <>\n      <Header/>\n      <main className={styles.main}>\n        <Outlet/>\n      </main>\n    </>\n  )\n}","import React from 'react'\nimport styles from './NewPassword.module.css'\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../App/store\";\nimport {InitialStateNewPasswordType} from \"./newPasswordReducer\";\n\nexport const NewPassword:React.FC<PropsType> = () => {\n  const pageData = useSelector<AppRootStateType, InitialStateNewPasswordType>(state => state.newPasswordReducer)\n  return (\n    <div className={styles.newPassword}>\n      <h1>{pageData.pageTitle}</h1>\n    </div>\n  )\n}\n\ntype PropsType = {}\n","import React from 'react'\nimport styles from './Page404.module.css'\n\ntype PropsType = {\n\n}\n\nexport const Page404:React.FC<PropsType> = () => {\n  return (\n    <div className={styles.page404}>\n      <h1>4<span>0</span>4</h1>\n      <div>\n        <p>Page not found</p>\n        <p>Go to another page using the Menu</p>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport styles from './RecoveryPassword.module.css'\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../App/store\";\nimport {InitialStateRecoveryPasswordType} from \"./recoveryPasswordReducer\";\n\nexport const RecoveryPassword:React.FC<PropsType> = () => {\n  const pageData = useSelector<AppRootStateType, InitialStateRecoveryPasswordType>(state => state.recoveryPasswordReducer)\n\n  return (\n    <div className={styles.recoveryPassword}>\n      <h1>{pageData.pageTitle}</h1>\n    </div>\n  )\n}\n\ntype PropsType = {}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport styles from './InputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype InputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n  onChangeText?: (value: string) => void\n  onEnter?: () => void\n  error?: string\n  spanClassName?: string\n}\n\nconst InputText: React.FC<InputTextPropsType> = (\n  {\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n    onChange, onChangeText,\n    onKeyPress, onEnter,\n    error,\n    className, spanClassName,\n\n    ...restProps// все остальные пропсы попадут в объект restProps\n  }\n) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange // если есть пропс onChange\n    && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n    onChangeText && onChangeText(e.currentTarget.value)\n  }\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n    onKeyPress && onKeyPress(e);\n\n    onEnter // если есть пропс onEnter\n    && e.key === 'Enter' // и если нажата кнопка Enter\n    && onEnter() // то вызвать его\n  }\n\n  const finalSpanClassName = `${styles.error} ${spanClassName ? spanClassName : ''}`\n  const finalInputClassName = `${error ? styles.errorInput : styles.input} ${className}` // need to fix with (?:) and s.superInput\n\n  return (\n    <>\n      <input\n        type={'text'}\n        onChange={onChangeCallback}\n        onKeyPress={onKeyPressCallback}\n        className={finalInputClassName}\n\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n      />\n      {error && <span className={finalSpanClassName}>{error}</span>}\n    </>\n  )\n}\n\nexport default InputText\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './Checkbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype CheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst Checkbox: React.FC<CheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n\n      onChange && onChange(e)\n      onChangeChecked && onChangeChecked(e.currentTarget.checked)\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default Checkbox\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './Button.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype ButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst Button: React.FC<ButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default Button\n","import React from 'react'\nimport styles from './Test.module.css'\nimport InputText from \"../../common/InputText/InputText\";\nimport Checkbox from \"../../common/Checkbox/Checkbox\";\nimport Button from \"../../common/Button/Button\";\n\nexport const Test:React.FC<PropsType> = () => {\n  return (\n    <div className={styles.test}>\n      <h1>Test</h1>\n      <p><InputText className={styles.myInput}/></p>\n      <p><Checkbox className={styles.myCheckbox}/></p>\n      <p><Button className={styles.myButton}>Button</Button></p>\n    </div>\n  )\n}\n\n\ntype PropsType = {}","import React from 'react'\nimport styles from './UserRegistration.module.css'\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../App/store\";\nimport {InitialStateUserRegistrationType} from \"./userRegistrationReducer\";\n\nexport const UserRegistration:React.FC<PropsType> = () => {\n  const pageData = useSelector<AppRootStateType, InitialStateUserRegistrationType>(state => state.userRegistrationReducer)\n\n  return (\n    <div className={styles.login}>\n      <h1>{pageData.pageTitle}</h1>\n    </div>\n  )\n}\n\ntype PropsType = {}","import React from 'react';\nimport {Routes, Route} from \"react-router-dom\";\nimport './App.css';\nimport {Profile} from \"../components/Profile/Profile\";\nimport {Login} from \"../components/Login/Login\";\nimport {Layout} from \"../components/Layout/Layout\";\nimport {NewPassword} from \"../components/NewPassword/NewPassword\";\nimport {Page404} from \"../components/Page404/Page404\";\nimport {RecoveryPassword} from \"../components/RecoveryPassword/RecoveryPassword\";\nimport {Test} from \"../components/Test/Test\";\nimport {UserRegistration} from \"../components/UserRegistration/UserRegistration\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Routes>\n          <Route path={'/'} element={<Layout/>}>\n            <Route index element={<Test/>}/>\n            <Route path={'login'} element={<Login/>}/>\n            <Route path={'new-password'} element={<NewPassword/>}/>\n            <Route path={'recovery-password'} element={<RecoveryPassword/>}/>\n            <Route path={'profile'} element={<Profile/>}/>\n            <Route path={'user-registration'} element={<UserRegistration/>}/>\n            <Route path={'*'} element={<Page404/>}/>\n          </Route>\n        </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const InitialState = {\n  pageTitle: 'Login'\n}\n\nexport const loginReducer = (state: InitialStateLoginType = InitialState, action: ActionsType): InitialStateLoginType => {\n  return state\n}\n\nexport type InitialStateLoginType = typeof InitialState\ntype ActionsType = { type: string }","const InitialState = {\n  pageTitle: 'New Password'\n}\n\nexport const newPasswordReducer = (state: InitialStateNewPasswordType = InitialState, action: ActionsType): InitialStateNewPasswordType => {\n  return state\n}\n\nexport type InitialStateNewPasswordType = typeof InitialState\ntype ActionsType = { type: string }","const InitialState = {\n  pageTitle: 'Profile'\n}\n\nexport const profileReducer = (state: InitialStateProfileType = InitialState, action: ActionsType): InitialStateProfileType => {\n  return state\n}\n\nexport type InitialStateProfileType = typeof InitialState\ntype ActionsType = { type: string }","const InitialState = {\n  pageTitle: 'Recovery Password'\n}\n\nexport const recoveryPasswordReducer = (state: InitialStateRecoveryPasswordType = InitialState, action: ActionsType): InitialStateRecoveryPasswordType => {\n  return state\n}\n\nexport type InitialStateRecoveryPasswordType = typeof InitialState\ntype ActionsType = { type: string }","const InitialState = {\n  pageTitle: 'User Registration'\n}\n\nexport const userRegistrationReducer = (state: InitialStateUserRegistrationType = InitialState, action: ActionsType): InitialStateUserRegistrationType => {\n  return state\n}\n\nexport type InitialStateUserRegistrationType = typeof InitialState\ntype ActionsType = { type: string }","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport {loginReducer} from \"../components/Login/loginReducer\";\nimport {newPasswordReducer} from \"../components/NewPassword/newPasswordReducer\";\nimport {profileReducer} from \"../components/Profile/profileReducer\";\nimport {recoveryPasswordReducer} from \"../components/RecoveryPassword/recoveryPasswordReducer\";\nimport {userRegistrationReducer} from \"../components/UserRegistration/userRegistrationReducer\";\n\nconst rootReducer = combineReducers({\n  loginReducer,\n  newPasswordReducer,\n  profileReducer,\n  recoveryPasswordReducer,\n  userRegistrationReducer,\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {store} from \"./App/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}